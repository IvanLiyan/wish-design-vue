@import './common/var.scss';
@import './mixins/mixins.scss';

// @end category
// @end type

// @ignore
$breakpoints: (
  'xs': (
    max-width: $screen-sm,
  ),
  'sm': (
    min-width: $screen-sm,
  ),
  'md': (
    min-width: $screen-md,
  ),
  'lg': (
    min-width: $screen-lg,
  ),
  'xl': (
    min-width: $screen-xl,
  ),
  'xxl': (
    min-width: $screen-xxl,
  ),
);

[class*='#{$prefix}-col-'] {
  float: left;
  box-sizing: border-box;
}

.#{$prefix}-col-0 {
  display: none;
}

@for $i from 0 through 24 {
  .#{$prefix}-col-#{$i} {
    width: (1 / 24 * $i * 100) * 1%;
  }

  .#{$prefix}-col-offset-#{$i} {
    margin-left: (1 / 24 * $i * 100) * 1%;
  }

  .#{$prefix}-col-pull-#{$i} {
    position: relative;
    right: (1 / 24 * $i * 100) * 1%;
  }

  .#{$prefix}-col-push-#{$i} {
    position: relative;
    left: (1 / 24 * $i * 100) * 1%;
  }
}

@mixin res-mixin($breakpoint) {
  @include res($breakpoint) {
    .#{$prefix}-col-#{$breakpoint}-0 {
      display: none;
    }
    @for $i from 0 through 24 {
      .#{$prefix}-col-#{$breakpoint}-#{$i} {
        width: (1 / 24 * $i * 100) * 1%;
      }

      .#{$prefix}-col-#{$breakpoint}-offset-#{$i} {
        margin-left: (1 / 24 * $i * 100) * 1%;
      }

      .#{$prefix}-col-#{$breakpoint}-pull-#{$i} {
        position: relative;
        right: (1 / 24 * $i * 100) * 1%;
      }

      .#{$prefix}-col-#{$breakpoint}-push-#{$i} {
        position: relative;
        left: (1 / 24 * $i * 100) * 1%;
      }
    }
  }
}

@each $name in map_keys($breakpoints) {
  @include res-mixin($name);
}
