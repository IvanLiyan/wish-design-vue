

 {"chinese":{"api-head":{"name":"名称","desc":"说明","type":"类型","option":"可选值","default":"默认值","version":"版本","mean":"含义","param":"参数","event-name":"事件名称","event-signature":"事件签名","method-name":"方法名称"},"button":{"componnent_desc":"按钮用于触发某一行为动作。按钮上显示的文案(button label)需和这一行为动作相一致","module1":{"title":"基础样式","desc1":"根据按钮的组成，分为文字按钮，图标文字按钮，图标按钮"},"module2":{"title":"状态","desc1":"根据按钮的状态，分为正常，加载中，和不可点击"},"module3":{"title":"类型","desc1":"根据按钮的类型，分为主按钮、次级按钮、三级按钮、幽灵按钮、虚线按钮、文字按钮、链接按钮、强调按钮","desc2":"幽灵与次级按钮相似，区别：幽灵按钮背景色是透明，次级按钮背景色是白色","desc3":"链接和文字按钮很相似，链接按钮没有边距宽度"},"module4":{"title":"强调按钮","desc1":"用不同的颜色（红，黄，绿）来表示三种不同的强调含义（危险，警告，成功）"},"module5":{"title":"按钮组合","desc1":"一组相关联的操作聚合在一起成为按钮组，方便快捷操作"},"module6":{"title":"异步状态","desc1":"点击后按钮进入 loading 状态，当异步结束后恢复正常"},"api":{"type":"类型","loading":"是否加载中状态","disabled":"是否是禁用状态","icon":"设置按钮左侧图标类型","href":"点击跳转的地址，指定此属性将用 a 标签渲染组件","to":"同 router-link 组件 <a href='https://router.vuejs.org/zh/api/#to' target='blank'>to 属性</a>，指定此属性将使用 router-link 渲染组件","link-size":"类型为'link'时，设置链接文字的大小","html-type":"设置 button 原生的 type 类型","target":"相当于 a 链接的 target 属性，href 存在时生效","click":"click 事件 handler"}},"row":{"componnent_desc":"通过基础的 24 分栏，迅速简便地创建布局","module1":{"title":"基础布局","desc1":"使用单一分栏创建基础的栅格布局。 通过 row 和 col 组件，并通过 col 组件的 span 属性我们就可以自由地组合布局"},"module2":{"title":"类型与用法","subtitle1":"分栏间隔","desc1":"分栏之间存在间隔。 Row 组件 提供 gutter 属性来指定每一栏之间的间隔，默认间隔为 0","subtitle2":"混合布局","desc2":"通过基础的 1/24 分栏任意扩展组合形成较为复杂的混合布局","subtitle3":"分栏偏移","desc3":"支持偏移指定的栏数。 通过制定 col 组件的 offset 属性可以指定分栏偏移的栏数","subtitle4":"对齐方式","desc4":"通过 flex 布局来对分栏进行灵活的对齐。 将 type 属性赋值为 'flex'，可以启用 flex 布局，并可通过 justify 属性来指定 start, center, end, space-between, space-around 其中的值来定义子元素的排版方式","subtitle5":"响应式布局","desc5":"参照了 Bootstrap 的 响应式设计，预设了六个响应尺寸：xs、sm、md、lg、xl、xxl"},"api":{"gutter":"栅格间隔","type":"布局模式，现代浏览器下有效","justify":"flex布局下的水平排列方式","align":"flex 布局下的垂直排列方式","tag":"自定义元素标签","span":"栅格占据的列数","offset":"栅格左侧的间隔格数","push":"栅格向右移动格数","pull":"栅格向左移动格数","xs":"< 576px 响应式栅格数或者栅格属性对象","sm":"≥ 576px 响应式栅格数或者栅格属性对象","md":"≥ 768px 响应式栅格数或者栅格属性对象","lg":"≥ 992px 响应式栅格数或者栅格属性对象","xl":"≥ 1200px 响应式栅格数或者栅格属性对象","xxl":"≥ 1620px 响应式栅格数或者栅格属性对象","coltag":"自定义元素标签"}},"col":{"api":{"span":"栅格占据的列数","offset":"栅格左侧的间隔格数","push":"栅格向右移动格数","pull":"栅格向左移动格数","xs":"< 576px 响应式栅格数或者栅格属性对象","sm":"≥ 576px 响应式栅格数或者栅格属性对象","md":"≥ 768px 响应式栅格数或者栅格属性对象","lg":"≥ 992px 响应式栅格数或者栅格属性对象","xl":"≥ 1200px 响应式栅格数或者栅格属性对象","xxl":"≥ 1620px 响应式栅格数或者栅格属性对象","coltag":"自定义元素标签"}},"icon":{"componnent_desc":"Tetris主要使用线性图标","module1":{"title":"基础样式"},"module2":{"title":"类型与用法","subtitle1":"颜色","subtitle2":"大小&粗细"},"api":{"name":"icon名称","color":"颜色","width":"宽","height":"高","strokeWidth":"线条粗细"}},"input":{"componnent_desc":"用于收集用户通过鼠标或键盘提供的信息","module1":{"title":"单行文本","subtitle1":"基础样式","desc1":"基本使用，可自定义内置标题，占位符，图标，标签，提示和验证","subtitle2":"状态变化","desc2":"输入框的聚焦、点击状态，不可编辑状态，以及报错状态","subtitle3":"应用","desc3":"1、纯输入框 2、带标题的输入框 3、带图标的输入框 4、带前后缀的输入框 5、可以清除内容的输入框"},"module2":{"title":"多行文本","subtitle1":"基础样式","desc1":"用于收集用户输入的大量信息","subtitle2":"状态变化","desc2":"输入框的聚焦、点击状态，不可编辑状态，以及报错状态"},"api":{"type":"类型","clearable":"是否有清空按钮","invalid":"是否是错误状态","disabled":"是否禁用","max-length":"限制输入的最大长度","value":"输入框的内容,若需要双向数据绑定，请使用v-model","autosize":"自适应内容高度, 可传入对象，如，{ minRows: 2, maxRows: 6 }","prefix":"输入框头部图标插槽","suffix":"输入框尾部图标插槽","input":"当输入值改变时触发","change":"当输入值改变时触发，拼音输入过程中将不再触发，如有需要可使用 input 事件","clear":"当点击清空按钮时触发","enter":"用户按下回车时触发，在中文输入过程中按下回车不会触发"}},"radio":{"componnent_desc":"用于多个选项（一般一组不超过 5 个）的单选输入，状态的切换","api":{"value":"Radio 的 value","disabled":"禁用状态,继承 RadioGroup 组件的 disabled 值","checked":"是否选中,根据 group 组件的 value 计算得出","default":"默认 vue slot","hint":"注释内容","change":"在选项状态发生改变时触发，返回当前状态"}},"radio-group":{"api":{"disabled":"禁用状态","value":"当前选中的值","name":"RadioGroup 下所有 input[type='radio'] 的 name 属性","change":"在选项状态发生改变时触发，返回当前状态。"}},"checkbox":{"componnent_desc":"用于多个选项（一般一组不超过 5 个）的选择输入，状态的切换","api":{"value":"Checkbox 的 value","disabled":"禁用状态，可继承 CheckboxGroup 组件的 disabled 值","name":"Checkbox 的 name，可继承 CheckboxGroup 组件的 name 值","checked":"是否选中,支持 v-model,如果在 CheckboxGroup 中将根据 value 值判断得出","default":"默认 vue slot","hint":"注释内容","change":"在选项状态发生改变时触发，返回当前状态。"}},"checkbox-group":{"api":{"disabled":"禁用状态","value":"当前选中的值，支持 v-model","change":"在选项状态发生改变时触发，返回当前状态。"}},"switch":{"componnent_desc":"表达同一行为两种互斥状态之间的切换","api":{"disabled":"是否禁用","name":"switch 组件的 name 属性","value":"支持 v-model，用于设置开关是否选中，使用 value === true-value 来判断是否打开","true-value":"switch 打开时的值","false-value":"switch 关闭时的值","default":"默认 vue slot","hint":"注释内容","change":"开关变化时触发，返回当前的状态"}},"tag":{"componnent_desc":"用于展示分类和标记属性，可操作标签为圆角，纯展示标签为直角","api":{"size":"尺寸","type":"类型","rounded":"是否是圆形","closable":"是否可以关闭","disabled":"是否禁用","click":"点击事件的回调","close":"关闭事件的回调"}},"dropdown":{"componnent_desc":"向下弹出的列表，用于归纳同类型的项目","module1":{"title":"基础样式","desc1":"下拉由下拉项目组成。下拉项目内容可以自定义，可以含有图标，文字和展开按钮，或者为纯文字。 多个层级的下拉见级联选择 Cascader"},"module2":{"title":"呼出方式"},"module3":{"title":"弹出位置"},"module4":{"title":"应用","desc1":"基础下拉","desc2":"图标型下拉","desc3":"下拉内容分类展示"},"api":{"show-arrow":"是否显示箭头","visible":"手动控制是否显示 Dropdown, 支持 v-model","placement":"显示的位置","poppper-class":"为 Dropdown 的 popper 添加类名","disabled":"是否禁用","trigger":"触发行为","popper-options":"自定义 popper.js 的配置项，具体配置查看 <a target='_blank' href='https://popper.js.org/docs/v1/#modifiers--codeobjectcode'>popper.js 文档</a>","dropdown":"下拉显示的内容","updatePopper":"手动更新下拉面板位置","change":"下拉框出现/隐藏时触发","clickoutside":"trigger 为 click 时，点击下拉框外部时触发"}}},"english":{"api-head":{"name":"name","desc":"desc","type":"type","option":"option","default":"default","version":"version","mean":"mean","param":"param","event-name":"event-name","event-signature":"event-signature","method-name":"method-name"},"button":{"componnent_desc":"Button is used for starting an action. The button label text should reflect the action.","module1":{"title":"Basic Style","desc1":"The button component includes: Text Button, Text + Icon Button, and Icon Button."},"module2":{"title":"Status","desc1":"The button component has normal, loading, and disable status."},"module3":{"title":"Type","desc1":"Button component includes 8 different types: Primary Button, Secondary Button, Tertiary Button, Ghost Button, Dashed-line Button, Text Button, Link Button, and Emphasis Button.","desc2":"Ghost button is similar to secondary button, the main difference here is that ghost button has a transparent background while the secondary button has a white background.","desc3":"Link is similar to text button, but without paddings."},"module4":{"title":"Emphasis Button","desc1":"We use three different colors (Red, Yellow, Green) to emphasis different status (Danger, Warning, Success)."},"module5":{"title":"Button Group","desc1":"A series of related actions can be combined into button groups, to improve usability."},"module6":{"title":"Loading Status","desc1":"You can also add a loading status to a clicked button to imform the user the system is running, after the loading complete, the button is back to normal status."},"api":{"type":"Button Type","loading":"Whether to show loading status","disabled":"Whether to show disabled status","icon":"Set the left-side icon type","href":"Set the redirect link after clicking the button, this property uses tag a render property","to":"Same as 'to' property in router-link component, this property uses router-link render property","link-size":"Set the font size of 'link' type button","html-type":"Set the original html type of the button","target":"Similar to tag a target property, this property exist when href detected","click":"Set the click event handler"}},"row":{"componnent_desc":"Use the 24-column system to create layout easily.","module1":{"title":"Basic Grid","desc1":"Use row to create simple horizontal containers. Within row, use col and span to create different combinations of elements that span any number of columns."},"module2":{"title":"Type and Use Cases","subtitle1":"Gutter","desc1":"Gutters exist between columns. You can set gutters under row component, the default gutter is 0.","subtitle2":"Mixed Grid","desc2":"By mixing columns with differnt span under the 24-grid system, you can easily create different layout.","subtitle3":"Offset","desc3":"Support column starting from specific position by specifying offset.","subtitle4":"Alignment","desc4":"Use flex property to have flexible alginment, by adding flex as well as justify value (start, center, end, space-between, space-around), you can define the layout alignment as shown below.","subtitle5":"Responsive","desc5":"Tetris grid system referes to Bootstrap Responsive Design，and have 6 responsive presets：xs、sm、md、lg、xl、xxl."},"api":{"gutter":"The space between columns","type":"The layout of the grid, effective for modern browser","justify":"Horizontal arrangement under flex type","align":"Vertical arrangement under flex type","tag":"Customized element tag","span":"The number of columns one raster occupied","offset":"The number of columns to offset raster from left","push":"The number of columns that raster is moved to the right","pull":"The number of columns that raster is moved to the left","xs":"< 576px, could be a span value or an object containing above props","sm":"≥ 576px, could be a span value or an object containing above props","md":"≥ 768px, could be a span value or an object containing above props","lg":"≥ 992px, could be a span value or an object containing above props","xl":"≥ 1200px, could be a span value or an object containing above props","xxl":"≥ 1620px, could be a span value or an object containing above props","coltag":"Customized element tag"}},"col":{"api":{"span":"The number of columns one raster occupied","offset":"The number of columns to offset raster from left","push":"The number of columns that raster is moved to the right","pull":"The number of columns that raster is moved to the left","xs":"< 576px, could be a span value or an object containing above props","sm":"≥ 576px, could be a span value or an object containing above props","md":"≥ 768px, could be a span value or an object containing above props","lg":"≥ 992px, could be a span value or an object containing above props","xl":"≥ 1200px, could be a span value or an object containing above props","xxl":"≥ 1620px, could be a span value or an object containing above props","coltag":"Customized element tag"}},"icon":{"componnent_desc":"Tetris mainly uses line icon.","module1":{"title":"Basic Style"},"module2":{"title":"Type and Use Cases","subtitle1":"Color","subtitle2":"Size & Thickness"},"api":{"name":"The name of the icon","color":"The color of the icon","width":"The width of the icon","height":"The height of the icon","strokeWidth":"The line thickness of the icon"}},"input":{"componnent_desc":"Use for collecting mouse/keyboard input from user.","module1":{"title":"Single-line Input","subtitle1":"Basic Style","desc1":"Basic usage, you can customize label, placeholder, icon, prefix & suffix, hint, and validation.","subtitle2":"Status","desc2":"Single-line Input has focused, clicked, disabled, and invalid status.","subtitle3":"Use Cases","desc3":"1. Text Input 2. Input with label 3. Input with Icon 4. Input with prefix/suffix 5. Input with clear function."},"module2":{"title":"Multi-line Input","subtitle1":"Basic Style","desc1":"Use for collecting large quantity data from user.","subtitle2":"Status","desc2":"Multi-line Input has focused, clicked, disabled, and invalid status."},"api":{"type":"Type property","clearable":"Whether to show clear button","invalid":"Whether the input is invalid","disabled":"Whether disabled","max-length":"The max length of the input value","value":"The content of the input, please use v-model if two-way data bind is required","autosize":"Responsive height, support object, for example, {minRows: 2, maxRows: 6}","prefix":"The icon slot before input value","suffix":"The icon slot after input value","input":"Triggered when input value changed","change":"Trigged when input value changed but won't trigger during Chinese Pinyin input. Please use input if trigger is needed","clear":"Triggered when clicking clear button","enter":"Triggered when press keyboard 'enter', won't trigger during Chinese Pinyin input "}},"radio":{"componnent_desc":"Use for Single-choice input (normally no more than 5) or change of status","api":{"value":"Set the radio value property","disabled":"Disable property, can inherit RadioGroup component disabled property","checked":"Whether selected, defined by group component value","default":"default vue slot","hint":"Set the hint text property","change":"Triggered when status change, return current status"}},"radio-group":{"api":{"disabled":"Disabled status","value":"Current selected value","name":"All the input [type='radio'] name properties under RadioGroup","change":"Triggered when status change, return current status"}},"checkbox":{"componnent_desc":"Use for multi-choice input (normally no more than 5) or change of status","api":{"value":"Set the checkbox value property","disabled":"Disable property, can inherit CheckboxGroup component disabled property","name":"Name property, can inherit CheckboxGroup component name property","checked":"Checked status, supports v-model. If checkbox is part of a CheckboxGroup, it will be defined by the value property","default":"default vue slot","hint":"Set the hint text property","change":"Triggered when status change, return current status"}},"checkbox-group":{"api":{"disabled":"Disabled status","value":"Current selected value, supports v-model","change":"Triggered when status change, return current status"}},"switch":{"componnent_desc":"Show the boolean status change of the same action.","api":{"disabled":"Whether disabled","name":"The name property of the switch component","value":"Support v-model, used for setting whether the switch is turned on, use value === true-value to check if it is turned on","true-value":"The value when the switch is turned on","false-value":"The value when the switch is turned off","default":"default vue slot","hint":"Set the hint text property","change":"Triggered when status change, return current status"}},"tag":{"componnent_desc":"Use for showing/tagging category & property. The clickable tag has a rounded border while the display tag has a square border.","api":{"size":"The size property","type":"The type property","rounded":"Whether the border-radius is rounded","closable":"Whether the tag is closable","disabled":"Whether the tag is disabled","click":"The return value of the click event","close":"The return value of the close event"}},"dropdown":{"componnent_desc":"Use for expanding a list of similar types of content downwards","module1":{"title":"Basic Style","desc1":"Dropdown is made of dropdown content. You can customize dropdown content, with icon, text, button, etc. If you need multiple layers, you can use Cascader."},"module2":{"title":"Trigger"},"module3":{"title":"Position"},"module4":{"title":"Use Cases","desc1":"Basic Dropdown","desc2":"Icon Dropdown","desc3":"Customized Dropdown"},"api":{"show-arrow":"Whether to show arrow","visible":"Whether to show dropdown, support v-model","placement":"The placement of the dropdown","poppper-class":"Add the category name of the dropdown popper","disabled":"Whether disabled","trigger":"The trigger behavior of the dropdown","popper-options":"The customized popper.js config, please read <a target='_blank' href='https://popper.js.org/docs/v1/#modifiers--codeobjectcode'>popper.js</a> for more details","dropdown":"The content of the dropdown","updatePopper":"Update popper content manually","change":"Triggered when dropdown shows/hides","clickoutside":"When triggered by clicking, triggered by clicking the outside area of dropdown"}}}}

