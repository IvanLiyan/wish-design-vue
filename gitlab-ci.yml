stages:
  - scan
  - pre-commit
  - release
  - build

variables:
  NPM_REGISTRY: npm.infra.wish-cn.com/
  NPM_PACKAGE_VERSION: ""
  MANUAL_RELEASE: ""

include:
  - project: "contextlogic/includes-cn"
    file: "templates/job-pre-commit/placeholder.yml"
  - project: 'contextlogic/includes-cn' # this is the sonarscan job for scanning itself.
    ref: master
    file: "/templates/job-sonar/default.yml"
    rules:
      - if: $CI_PIPELINE_SOURCE == "schedule" && $SCHEDULE_TYPE == "daily" && $JOB == "sonarscan"
  - project: "contextlogic/includes-cn"
    file: "/templates/job-docker-build/default.yml"

build_image:
  extends: .docker-build
  variables:
    DOCKERFILE: "docker/Dockerfile"

release_package_to_npm_cn:
  image: harbor.infra.wish-cn.com/upstream/node:12
  stage: release
  script:
    - |
      # Upload javascript package to NPM
      echo "registry=https://"$NPM_REGISTRY > ~/.npmrc
      echo "//"$NPM_REGISTRY":_authToken=\"$GITLAB_NPM_TOKEN\"" >> ~/.npmrc
    
      set -e
      timestr=$(date +'%Y-%m-%d')
      if [[ $NPM_PACKAGE_VERSION -eq "" ]]; then
        new_branch_name="${CI_COMMIT_BRANCH/_/-}" #use - replace _ for publish version
        NPM_PACKAGE_VERSION="0.0.2-$new_branch_name-$timestr-$CI_COMMIT_SHORT_SHA"
      fi

      npm run node-i
      npm run build
      echo "build done" 

      VERSION_LINE="\"version\": \""$NPM_PACKAGE_VERSION"\","
      sed -i -e 's#"version".*#'"$VERSION_LINE"'#g' package.json
      echo "before publish"
    - npm publish publish
  tags:
    - pod
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule" && $SCHEDULE_TYPE == "weekly" && $CI_COMMIT_BRANCH == "main"
      when: always
    - if: $MANUAL_RELEASE == "true"
      when: manual
